@page "/OrderDetails"
@inject IProductCategoryService ProductCategoryService
@inject IProductService ProductService
@inject IClientService ClientService
@inject IOrderService OrderService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@attribute [Authorize]


@if (Clients != null && Order != null)
{
    <EditForm Model="@Order" OnValidSubmit="SaveOrder">

        <div class="card">
            <h5 class="card-header">Order details</h5>
            <div class="card-body">
                <div class="container">
                    <div class="row">
                        <div class="col-md-4 mb-3">

                        </div>
                        <div class="col-md-4 mb-3">
                            <input type="submit" class="btn btn-success" value="Save" />
                            <input type="button" class="btn btn-secondary" value="Cancel" @onclick="Cancel" />
                        </div>
                        <div class="col-md-4 mb-3">

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label>Number</label>
                            <InputNumber class="form-control" @bind-Value="@Order.OrderNumber" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label>Order date</label>
                            <InputDate class="form-control" @bind-Value="@Order.OrderDate" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label>Clients</label>
                            <InputSelect class="form-control" @bind-Value="@Order.ClientId">
                                @foreach (Client item in Clients)
                                    {
                                    <option value="@item.Id">@item.FirstName @item.LastName</option>
                                    }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label>Delivery Date</label>
                            <InputDate class="form-control" @bind-Value="@Order.DeliveryDate" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label>Total</label>
                            <InputNumber class="form-control" @bind-Value="@Order.Total" />
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-4 mb-3">

                        </div>
                        <div class="col-md-4 mb-3">
                            <input type="button" class="btn btn-secondary" value="Add product" @onclick="AddProduct" />
                        </div>
                        <div class="col-md-4 mb-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>


        @if(Order.Products != null && Order.Products.Any())
        { 
            <MudTable Items="@Order.Products" Hover="true" Breakpoint="Breakpoint.Sm">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Products</MudText>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>Price</MudTh>
                    <MudTh>Quantity</MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate Context="ProductContext">
                    <MudTd DataLabel="Name">@ProductContext.Name</MudTd>
                    <MudTd DataLabel="Price">@ProductContext.Price</MudTd>
                    <MudTd DataLabel="Quantity">@ProductContext.Quantity</MudTd>
                    <MudTd DataLabel=""></MudTd>
                </RowTemplate>
            </MudTable>
        }

    </EditForm>
}
else
{
    <p>Loading...</p>
}

@code {

    public Order Order;
    public IEnumerable<Client> Clients;
    public string Message { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            Order = new Order() { ProductCategoryId = 1, OrderDate = DateTime.Now, DeliveryDate = DateTime.Now.AddDays(7) };
            Clients = await ClientService.GetAll();
        }
        catch (Exception e)
        {
            Message = "There was an error on..." + e.Message;
        }
    }



    protected async Task SaveOrder()
    {
        await OrderService.Save(Order);
    }
    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    protected void Cancel()
    {
        NavigateToHome();
    }

    protected async Task AddProduct()
    {
        var dialog = DialogService.Show<ProductDetails>("Product Details");
        var result = await dialog.Result;

        if(!result.Cancelled)
        {
            var product = (Product)result.Data;
            Order.Products.Add(product);
        }

    }
}
