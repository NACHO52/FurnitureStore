@page "/orderDetails"
@inject IProductCategoryService ProductCategoryService
@inject IProductService ProductService

<h3>OrderDetails</h3>

@if (ProductCategories != null && Order != null)
{
    <EditForm Model="@Order">
        <label>Category:</label>
        <InputSelect class="form-control col-sm-5"
                     Value="@Order.ProductCategoryId"
                     ValueChanged="@((int productCategoryId) => ProductCategoryHasChanged(productCategoryId))"
                     ValueExpression="@(() => Order.ProductCategoryId)">
            @foreach (var item in ProductCategories)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </InputSelect>

        <label>Product:</label>
        <InputSelect class="form-control col-sm-5" @bind-Value="@ProductId">
            @foreach (var item in Products)
                {
                <option value="@item.Id">@item.Name</option>
                }
        </InputSelect>
    </EditForm>
}
else
{
    <p>Loading...</p>
}

@code {

    public Order Order;
    public IEnumerable<ProductCategory> ProductCategories;
    public IEnumerable<Product> Products;
    public string Message { get; set; }
    public int ProductId { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            Order = new Order() { ProductCategoryId = 1 };
            ProductCategories = await ProductCategoryService.GetProductCategories();
            await LoadProducts(Order.ProductCategoryId);
        }
        catch (Exception e)
        {
            Message = "There was an error on..." + e.Message;
        }
    }

    protected async Task ProductCategoryHasChanged(int productCategoryId)
    {
        Order.ProductCategoryId = productCategoryId;
        if (Order.ProductCategoryId > 0)
        {
            await LoadProducts(Order.ProductCategoryId);
        }
    }

    private async Task LoadProducts(int productCategoryId)
    {
        Products = await ProductService.GetByCategory(productCategoryId);
    }
}
